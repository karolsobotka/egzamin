// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using egzamin.Models;

#nullable disable

namespace egzamin.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230203093831_asd12321Migration")]
    partial class asd12321Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("egzamin.Models.Project", b =>
                {
                    b.Property<int>("IdTeam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeam"), 1L, 1);

                    b.Property<DateTime>("Deadline")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTeam")
                        .HasName("Team_Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("egzamin.Models.Task", b =>
                {
                    b.Property<int>("IdTask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTask"), 1L, 1);

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdAssignedTo")
                        .HasColumnType("int");

                    b.Property<int>("IdCreator")
                        .HasColumnType("int");

                    b.Property<int>("IdTaskType")
                        .HasColumnType("int");

                    b.Property<int>("IdTeam")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("projectIdTeam")
                        .HasColumnType("int");

                    b.Property<int>("taskTypeIdTaskType")
                        .HasColumnType("int");

                    b.Property<int>("teamMemberIdTeamMember")
                        .HasColumnType("int");

                    b.HasKey("IdTask")
                        .HasName("Task_Id");

                    b.HasIndex("projectIdTeam");

                    b.HasIndex("taskTypeIdTaskType");

                    b.HasIndex("teamMemberIdTeamMember");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("egzamin.Models.TaskType", b =>
                {
                    b.Property<int>("IdTaskType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTaskType"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTaskType")
                        .HasName("TaskType_Id");

                    b.ToTable("TaskTypes");
                });

            modelBuilder.Entity("egzamin.Models.TeamMember", b =>
                {
                    b.Property<int>("IdTeamMember")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeamMember"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTeamMember")
                        .HasName("TeamMember_Id");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("egzamin.Models.Task", b =>
                {
                    b.HasOne("egzamin.Models.Project", "project")
                        .WithMany("Tasks")
                        .HasForeignKey("projectIdTeam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("egzamin.Models.TaskType", "taskType")
                        .WithMany("Tasks")
                        .HasForeignKey("taskTypeIdTaskType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("egzamin.Models.TeamMember", "teamMember")
                        .WithMany("Tasks")
                        .HasForeignKey("teamMemberIdTeamMember")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project");

                    b.Navigation("taskType");

                    b.Navigation("teamMember");
                });

            modelBuilder.Entity("egzamin.Models.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("egzamin.Models.TaskType", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("egzamin.Models.TeamMember", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
